OK 我們上週這個十五點零還有最後一些最後一頁沒有講喔
最後一頁要講的就是那個 speech  enhancement 我們也舉一個例子
那就是這裡那所謂的 speech  enhancement 我們之前說過就是嗯
當你的這個真正所要 recognize 的的的的聲音跟你做 training 的時候的聲音不一樣不 match 的時候
那麼我們可以做 model  base 的部分我調 model 
想辦法把 clean  speech 所 train 的 model 調成你的這個這個 testing 環境的 model 這是 model  base 的
我也可以做 feature  base 的那麼我想辦法把 feature 調成跟這個 feature 很像的這是 feature  base 
那當然還有一種情形就是我根本就在 signal 這邊做 我想辦法就把這個 signal 弄得跟它比較像
那這就是所謂的 speech  enhancement 
那 speech  enhancement 的發展歷史非常早
那麼早早在七零年代六零年代的時候已經是一個研究的題目
當時還沒有好好的做這個 speech  recognition 
那就已經先有這個了因為當時的想法只是希望把聲音變的好聽一點
譬如說當你在車裡面或者在飛機上這個講話的時候聲音永遠都有干擾這個時候我如何把那個聲音雜訊濾掉弄得乾淨一點當時的想法是這樣
就讓它好聽就是了這是所謂的 speech  enhancement 
但是到了 recognition 的時候其實發現其實不一定要再再好聽而且你如果把一個聲音弄乾淨一點的話其實對 recognition 也有幫助
所以呢 speech  enhancement 也就同樣可以用在這裡喔
所以這是一個相當有歷史的領域
那我們這邊舉的一個例子也是非常有歷史的例子
可能可以算是 speech  enhancement 裡面的最具代表性的一個例子
那所謂的 Spectrum  Subtraction 就是 s  s 
那這個也可以算是少數這個壽命最長的語音技術
那麼它在七零年代一九七零年代的末期就已經非常成熟
但是呢一直到現在仍然廣泛的在使用
不但是廣泛的在使用而且不斷的有新的研究
所以呢一直到今天仍然每年都有很多篇 paper 在說這個可以怎麼做做的更好等等一直都是
到今天仍然是一個活躍的研究領域因為不斷有新的 paper 在說怎麼做喔
所以可以說是少數最長命的最長命的這個也算是最有代表性的技術之一所以我們稍微提一下
那這個觀念說穿了其實很簡單
那它的想法只是說
假假使我的語音訊號在這
那麼雜訊是什麼呢雜訊是 noise 一般是奇奇怪怪的加在這個上面
那麼加在上面之後把整個訊號都弄亂了而這個訊號常常是每一瞬間永遠不一樣
對不對你這一段的 noise 跟這一段的 noise 是不一樣的
你你真的要把它的 noise 去減掉還不知如何減法因為你其實根本就是 noise 跟 signal 混在一起
你要把它扣掉拿掉這這不知怎麼拿
那麼但是呢事實上有一個很自然的方法就是你如果做一個 fourier  transform 到 frequency  domain 去的話
到 frequency  domain 的時候我的我的訊號仍然每一瞬間是不一樣譬如說我這個取的跟這個取的是不一樣的
這個訊號的 fourier  transform 跟這個是不一樣的可是 noise 通常是很像的
所以呢我如果我如果 noise 取出來是某一種樣子的話
我下一瞬間的 noise 可能還是差不多的
也就是說 noise 本身在 frequency  domain 的變化不會那麼快喔
這個是一個這個 noise 絕大多數的 noise 都有這麼一個特性
也就是說雖然 signal 在在這個 frame 跟這個 frame 是可能是差很大
我的變化是相當多的它的它的 fourier  TRANSFORM 也是差很多的
可是 noise 在這一瞬間跟這一瞬間你如果
你看 time  domain 仍然差很多可是你如果做 fourier  transform 過來的話呢可能差不多
喔因為這個原因呢所以就想出這個辦法
就是我到 frequency  domain 去相減
那也就是說呢你你今天這個我們說話的時候我們知道我們永遠是有一堆斷開來的 silence 
換句話說我在講話的時候
我絕對不是連珠砲一直說個不停而是我這一段說完之後我會停下來 either 聽對方講話 or 是我要換口氣或者怎樣
有一段是空的之後才會有下一段
那麼講完之後我又有一段是空的才會有下一段
那麼當你在中間這段空的時候這邊顯然都是 noise
同樣的一開機我還沒講話之前開機的這邊也是 noise 
所以我只要在這個地方取 noise
然後來做 fourier  transform 的話我得到這個 noise 的 spectrum 
那麼因此呢我可以在這邊呢就拿這個當成是 noise 來減把它減掉
基本上精神就是這樣子而已
那麼因此呢譬如說我在一開機還沒說話之前有零點一秒的的空檔我就把那零點一秒的空檔拿來做 fourier  transform 
那我就知道 noise 長怎樣那我可以假設這段時間的 noise 都是這樣
雖然不完全是但是至少是像的所以我這一這一小段裡面我就都把它的全部都做 fourier  transform 都把它減掉
之後呢就得到一個比較接近於真實聲音的東西
然後等到這邊也有空下來之後我重新取新的 noise 
取新的 noise 到這邊再來減新的 noise 喔
那我這邊又可以取新的 noise 我這邊又可以減新的 noise 
因此呢我就拿這一段來減這邊拿這一段來減這邊
喔基本上想法是這樣子
那如果是這樣子的話呢你大致上可以把
當然不會 exactly 一樣啦 noise 當然也是在變啦不能說這邊的 noise 跟這邊的完全一樣是不會的
但是呢它變化的比較少
在 time  domain 變化得多在 frequency  domain 變化得少所以我以用它來當它來減的話呢是可以清掉不少 noise
讓這個聲音好聽不少
那這個想法就是所謂的 spectrum  subtraction 你看他名字就知道了
就是我到 frequency  domain 去在它的 spectrum 上面相減
那真的做的式子是稍微複雜一點是底下這個式子
那它的意思是說呢我們每一個 frequency 去減
這個就是 y 就是 y 就是我 signal 加 noise 當然 noise 也在這上面也加了在這上面嘛
noise 跟這個一起加的嘛所以這個地方得到的是 signal 加 noise 這就是所謂的 y 
但是呢我在這邊所得到的呢就是所謂的 n 
所以呢我把 y 跟 n 都做 fourier  transform 
然後呢在 frequency  domain omega 這個地方去 y 去減 n 
基本上就應該得到比較接近原來的 clean  speech 這就是我這邊用的 x 的估計值 x  hat 
ok 那這個就是它的這個基本的最基本的想法其實就是這樣子而已
也就是說我的 clean  speech 是這樣
這個是我的 clean  speech 就是 x 的 t 
那我加上一堆 noise 那我假設是 n 
於是呢我就把 y 減掉 n 得到我的 x 的 hat 喔
但是呢這個時候要稍微小心一下就是我們真正做的時候呢這個 y 的 transform 
你如果做出來很可能會變成這樣這是 omega 我的 frequency 
那我我 y 做出來我們知道它其實有大有小嘛
如果這個是我的 y 的 omega 
就是我的這個這個 i 就是第 i 個 frame 喔
這個 i 是指第 i 個 frame 的的那個做出來的這個這個 noisy  speech  y  of  omega 
但是呢我減我這個這個我拿前面的這個這段這個還沒有開始講話之前剛開機的這個這零點一秒的這個 noise 拿來做的 transform 呢搞不好是像這樣
譬如說是
那這個呢我們如果說這個是這個 n  of  omega 
那就是這個
那這時候你就會發現呢因為 n  of  omega 如果這樣 y 如果是這樣的話呢有的地方 y 比起 n 來並不大
當你像這一像這個 frequency 
y 比 n 大很多的時候你可以相信如果把 y 減掉 n 之後大概把這個 noise 去掉不少是會比較好的
可是你如果像在這個地方的話像這個地方的話呢你的你的 signal 並沒有比 noise 大多少
noise 這個地方滿大的在這些 frequency 上 noise 滿大的而而 signal 滿小的
你這個時候再減還還可靠嗎這個時候可能非常糟糕
也就是說在在這些個 frequency 裡面它的 signal 比 noise 沒有大多少甚至於比 noise 還要小或者怎麼樣
那你這時候還要去減一減的話減出來是八成是不對的
因此呢怎麼辦
那它的辦法就是說我取一個原來那個 y 乘上某一個 alpha 這個 alpha 是一個要選的參數譬如說零點幾
你如果是減起來大於零大於它的原來的零點幾倍的話我就用減的
可是如果小於它的零點幾的話我就不減了我就把原來那個乘上零點幾就算了
我們舉例來講假設這是零點三的話
那麼我拿拿這個大的乘以零點三之後
凡是減了之後比那個零點三大都沒有問題我都用減的
所以夠所以這個地方只要夠大的話我都用都用這個來減
可是如果你這個一減之後比原來的零點三還要小的話
那就表示這個這個 noise 已經大到一個程度這個地方這些個 frequency 就已經非常不可靠那我就不要減了
我就把原來那個 y 乘上那個 alpha 就當成我的訊號了喔
好所以呢它就有有這兩種做法
那麼 depends  on 我有這個 alpha 就是它所謂的 flooring 就是說我有一個這個下限
我減起來要比這個下限大的我才我才減如果比這個下限小我就不減了
那這個是這個是這個所謂 Spectrum  Subtraction 一個最基本的一個一個公式就是這個東西
那在在這個情形之下呢那還有一個問題就是說那你這個 noise 要怎麼算
我們剛才講說 OK 我就是拿前面基本精神就是我拿前面這一段當成這邊的拿這邊這一段當成這邊的
不過一個比較好的辦法呢我也是用一個 interpolation 
也就是說我如果是這個 n 的 i 跟新的中間新的跟舊的有一個 interpolation 用一個 beta 
那 beta 也是一個參數
換句話說我如果前一個 frame 我是用這個 i 減一在減的話
那麼我新的假設我現在得到一個新的 n 我不是直接用它的 n 而是用前面的來做 interpolate 
換句話說如果我一開始剛開機的時候我用這邊得到某一個去減
怎麼減我得到那個也是 averaging  over  m 個 frame  of  locally  detected  silence  parts 
也就是說我不是拿最後一個而是假設說我剛開機有零點一秒還沒開始講話
這零點一秒我其實得到了譬如說十個 frame 我是拿這個十個 frame 做平均拿來用
那麼於是我用在這裡是沒有錯
等到這邊我開始又得到新的 noise 的時候呢
我新的 noise 平均得到新的東西呢我不是直接它來減它而是這個東西再跟前面呢來做一個 interpolation 
那就是這邊的式子
所以呢這個這個 i 的 n 這個東西呢是最新 detect 到的 frame 
我現在在 frame  i 應該要用的是這個 noise 
但是呢我不直接用它我跟之前的做個 interpolation 
那這個 beta 也是一個重要的參數要選的
那麼這樣之後呢你這樣的 noise 比較穩定一點我用這個東西來減它
喔那那這個就是這個這兩個式子其實就是 Spectrum  Subtraction 最基本的公式
那這裡面其實有很多的學問就是怎麼怎麼求這個 alpha 跟怎麼求這個 beta 
那麼在什麼樣的 noise 狀況之下你怎麼樣子判斷這個 alpha 應該怎麼調
那麼 alpha 跟 beta 最好是可以隨著 noise 的狀況隨著 signal 的 noise  threshold 你要能夠調它
然後呢再進一步這兩個公式也可以調也是都是可以動的
那麼這兩個公式如果動一動都可以變的更好等等喔
那當然這些東西我們講起來呢都講起來這麼簡單那其實呢這邊相減呢只是他的
這個你知道 fourier  transform 都是有 amplitude 跟 phase 的
所以它是有一個 amplitude 你 transform 的時候是有一個 amplitude 有一個 phase 嘛
還有一個 phase 
那真正的比較好的做法是
我減 amplitude 但是 phase 我用原來的喔他們通常的做法是這樣子所以呢
就是 transform  back  to 當你這個減完之後就這個地方減了減完之後把它 transform  back 到原來的那個
但是呢這個用原來的 phase 就是 phase phase 我沒辦法動它我就用原來的原來 y 有什麼 phase 就用 y 的那個 phase 
然後一個 frame 一個 frame 轉轉回去你就可以得到一個有進步的聲音喔這就是所謂的 Spectrum  Subtraction 
那在多數 case 都是有進步的
但是你如果 s  n  ratio 很低的話
這個 noise 很高 signal 很低 s  n  ration 很很差的話這個效果就不會好了因為你變成大多數都是這個狀況就不會好了
所以這個是但是它有在很多時候都有相當好的效果喔
那麼那麼很多時候你如果減不對的話會產生 musical  noise 
什麼叫 musical  noise 呢就是你如果剛好譬如說
這裡的 noise 剛好 locally 有一個比較高的 pick 
那你它減它之後喔不對比較有一個低的它剛好有一個有一個低的一個有有一個低的 valley 
那這個低的部分你你有的時候你你在這邊你沒有辦法沒有辦法除掉那個低的部分
你就把它一減之後呢你那邊就多出一個高的出來那麼多出一個高的東西出來那個東西變成一個很奇怪的一個聲音
變成一個某一個 frequency 有一個很奇怪的聲音被被減出來那個聲音聽起來像像某一個 SIGNAL  frequency 在那個地方
那是所謂的 musical  noise 
那麼在很多時候你如果這個 alpha 跟 beta 調的不好的話會跑出這種東西出來喔
那那那他們有很多的研究如何如何做的更好也也是很多時候是為了要消除這個 musical  noise 喔等等
那這個我想這個是簡單的解釋這個就是 Spectrum  Subtraction 
那它的它的好處就是除了一方面可以 for  listening  purpose 一方面是 for  recognition  purpose 
也就是說那麼其實早在七零年代這個辦法就已經出來了
那在當時是只是為了 for  listening  purpose 就是為了好聽的
那麼你在汽車裡面你在飛機裡面你在這個比較吵雜的環境之下的聲音你都可以加一個這個 process 
都可以把它雜訊清掉相當程度變的比較好聽一點
那到了後來有 speech  recognition 的時候人家發現其實拿這個當成 recognition 的 front  end 先減掉之後再做也會比較好所以呢這個也可以做 recognition  purpose 喔
所以這個是 enhancement  speech  enhancement 的這個一個最代表性的例子
那我們剛才提過這是最少數壽命最長的技術
它在七零年代就已經出來了但是呢一直不斷有人在做研究因為不斷的可以把這個最簡單的方法做各種調改變
呃最簡單的就是怎麼樣調這個 alpha 跟 beta 
再複雜是怎麼把這個式子再做一點改變喔這個式子這邊都可以做一點改變譬如說這邊加上一個 alpha 次方加上一個 a 次方
讓它在 a 次方的地方相減或者是怎樣有很很多這個手腳可以動
那一直到今天每年仍然有非常多的 paper 再說這個怎麼做會比較好等等
所以它活到現在而且還活的很好是少數壽命非常長的這個代表性的一個技術
所以我們拿它來提一提作為這個 speech  enhancement 的代表性的作品
那這個就是我們前面所說的這個這裡你如果直接在 signal 這邊做的話也是有東西可以做的
那他的原我列了一個原始 paper 就是這裡的最後最後第二篇喔
這個其實就是 Spectrum  Subtraction 的原始 paper 早在一九七九年所以是二十將近三十年前喔
但是這個技術活到到今天仍然活的很好喔那麼這個
那你如果去找 reference 的話每一年都可以找到很多 paper 我這個只是最早的最原始的那一篇喔
那另外像這個第九還有一篇這篇我現在就不講了那你如果有興趣可以自己去看這個也滿有意思的它用一個所謂 union  model 
它把它的這個把它這個這個 Spectrum 分成一段一段的
因為很多時候這一段 noise 很厲害這一段 noise 不厲害所以你可以分成一段一段去處理哦等等
那這個我想這一類的 paper 很多那麼在這個領域是今天語音研究非常非常熱鬧的一個大領域
那麼你每年可以看到幾百甚至於是幾千篇 paper 都在搞這堆東西的喔
那麼我們這邊講的算是比較早比較早比較呃五六年以上然後比較這個嗯經過時間考驗大家都認定還算是不錯的東西
那新的很多很多那這個都是這個領域都是非常好的做報告的題材如果你對這個領域有興趣的話
所以我們大概說一說好十五點零說到這裡
