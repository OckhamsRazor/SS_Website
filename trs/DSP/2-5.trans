我再來我就可以在這裡面從這裡面來做我取一個 window 我再來算我的那些參數
那這裡我們順便說一下利用這個機會我們就講一下這個要
剛才這個的 short  time  energy 其實是一個例子在說明做 window 的過程
那我的這個這個式子是一個 general  form 其實就是底下這個式子的一個 general  form 底下這個它的 special  case
你看我我我如果把這裡的話呢我把這個 T 的是某一種 operator
等於說我對這個 signal 操作某一個 operator 之後乘上一個 window 然後加起來得到我的某一個參數
這是一個 general  form 這是一個 special  case
當我這個 operator 只是一個平方的時候我所得到 Q  N 就是 short  time  energy
但是呢我這個可以是更複雜的 operation 我就得到更多的東西
就像我們後面所講的我現在要
取一個 window 之後經過一堆演演算得到它的 feature  vector 的話也是一樣的意思
我也是這個求一個 window 之後在 window 上面做一堆 operation 之後得到我我所要的參數是一樣的
那這裡面我們最簡單容易了解的 window 是長方形就是我們剛講的這一個
只不過長方形的 window 其實不好
我們最常用的不是長方形而是這一個所謂的 hamming
這個 hamming 是怎樣的呢 hamming 不是這樣而是一個 cosine 的形狀
它是在這個裡面是是這樣
那麼從零到 L 減一其他都是零
或者說跟長方形比起來他就是
他的兩邊很小中間很大是一個 cosine
你如果把它這兩邊都擦掉的話
就變成 hamming hamming 是一個這樣子的東西這個數學式子寫成這樣
那麼為什麼要變成這樣這這個關係比較複雜要解釋 hamming 的什麼要用 hamming 的原因我們會在七點零的時候會再仔仔細說 hamming
跟 Rectangular 之間的關係
我我們這邊可以做一個非常簡單的解釋
這個解釋比較容易想像
沒有太多學理
那麼假設說我的因為我的語音很可能是這樣子我們舉一個例子哼
我們後面會看到語音常常長這樣那麼
如果是這樣的話
我用 Rectangular 來求的時候呢我這個 window 可能算到這裡
在這裡面算的某某一個譬如說 short  time  energy
待會兒當我的 window 搬到這來的時候
會怎樣
我一下少掉一個非常高的 peak 的很多東西但是多的是一些很小的值
因此從這裡到這裡會變化非常大
然後我如果再過來一點的話呢
我又丟掉了一堆這邊很大的東西多了一堆是很小的東西
因此我這樣子的話我得到的那個值會會 fluctuate 非常厲害
不像我這邊畫的這麼 smooth
而很可能是非常不 smooth 的
會變成這樣子非常不 smooth
為什麼非常不 smooth 就是我們剛才講的原因因為我其實
我這裡邊變化非常大很可能我向前移動一下的時候丟掉的是的值很大增加的值很小
或者你在移動過來的話我增加的值很大丟掉的值很小所以我這個變化非常多
那如何如何那如果它這個 fluctuate 非常厲害的話
我其實不容易判斷到底那個是什麼就很難講了我其實比較希望他 smooth 嘛
那它如何那它 smooth 呢一個簡單的辦法就是我不要讓它從頭到尾一樣 weight
而我把它兩邊 weight 降低我主要算中間的
那這樣的話是不是就會比較好呢當然會好很多對不對因為我這兩邊我都我都都拿掉了嘛
所以呢當我搬過來的時候我我丟掉的東西本來就很少
我增加的東西也就很少嘛我主要是以中間這堆東西為主
那中間這堆變化比較少嘛就比較 smooth 嘛
我們可以用這樣子簡單的理由來說
那詳細其實它是有學理的關係的不過那個我們留到七點零再講
我們現在先姑且用這個方法來解釋那大致的意思就是我們比較喜歡用的其實是 win 其實是像 hamming 這樣子的 window 而不是一個長方形的 window
好那有了這個之後再來是怎麼做
再來就變成說
我們剛才講我第一步先做了這個 pre  emphasis
把這個高頻的部分拉高了以後
那第二步我現在把這個呃呃哪裡是 noise 切掉了我知道這堆是聲音了
第三步呢我現在就可以取取一個 window 做一個 hamming  window 我就一段就出來了之後我這一段怎麼算東西呢
我我這一段這個我這個 hamming 加在這裡嘛對不對
我的這個我這個 hamming 加在加在這裡譬如說我從這裡加一個 hamming 過來
我得到這一些點假設這個 hamming 是 L 是兩百五十六或者五百一十二我就得到五百一十二點這個時候我可以拿來怎麼做呢
那麼第一件事情所謂的 discrete  fourier  transform 這就是我們剛才說的 fourier  transform
也就是我把 time  domain 轉到 frequency 上的 representation 去
於是我得到一堆 frequency 上面的 representation 像這樣像這樣嗯是在 frequency 上面的
那為什麼要這樣子做
那也是一個很簡單的原因是因為我們人的耳朵是聽 frequency 的
我們剛才說 ok 我們得到一個像這樣的東西
這是 frequency
那麼根據嗯心理學聽研研究人的認知醫學研究人的聽覺的人的研究那麼人的耳朵聽的是 frequency
我們本來就是聽 frequency 的所以呢嗯我們就要學人怎麼做的人是這樣做的
所以呢舉例來講
人的聽覺這個據他們的研究結果是
一組一組的聽覺神經分別在管一堆一堆的 frequency
譬如說這堆 frequency 是某一組聽覺神經在管的
下一堆是另外一組聽覺神經在管的
再過來是另外一組聽覺神經在管的
他們每一組在管裡面一堆
而這一堆呢彼此是 over  lap 的
那麼換句話說今天如果有兩個 frequency 都在這個裡面的話我們聽是聽不出來他們有區別
可是如果一個在這裡一個在這裡的話呢我們會聽出來兩個不同的聲音
ok 那麼一個在這裡一個在這裡我聽出兩個不同的聲音如果兩個都在這裡我是聽不出來他們有什麼區別的嗯有這樣的關係
然後呢在這些 over  lap 的地方呢是這一組也聽到這一組也聽到的
那麼如何去去做一個這樣子的事情呢
那麼早年的 engineer 想了很多辦法之後他們想的辦法就是所謂的這邊講的這個 filter  bank
它的意思就等於是說 ok 既然是這樣的話
你可以想像其實
我們是 ok 這一堆聽覺神經這一組它聽的這一堆 frequency 之後呢它有一個訊息
送到大腦去
那這一堆的呢它也聽到了之後有一個訊息
送到大腦裡面的聽覺的部分等等這有另外一個
既然如此我們也來做這一件事
那譬如說呢
這一堆呢你可以想像也許就是從這裡到這裡吧
我想辦法把這一些個 frequency
這一些個 frequency 的 signal 我把它加乘起來變成某一個訊號
拿來用
那這一堆呢我也加乘起來
譬如說這個我我加乘起來當成當成某一個訊號來用等等等等
那這個怎麼做呢就是你就取這當你做了做了這個
當你做了這個 discrete  fourier  transform 的時候你就會得到像這樣子的東西嘛
你就可以把這堆 frequency 加起來把這堆 frequency 加起來等等
那這個的這個的功能就是所謂的 filter  bank
就是一個一個的 filter
那它的做法呢就變成像這樣
就是我我想辦法取這一堆 frequency
那麼分別乘上這些值對不對
我取這分別乘上這些值把它加起來
可是如果是這樣的話呢這個 engineer 覺得很困擾
因為這樣子的話那這個呢要加這個對不對
那難道說這些 frequency 聽兩次呀
那我們真的聽兩次呀在這邊聽到在這邊聽到呀
難道他們聽兩次嗎這好像有點怪怪的
那麼後來他們就想了一個辦法
這個辦法其實沒有什麼特別道理這只是一個一個一個非常 ENGINEERING 的想法
它就說那這樣子吧我們把它變成三角形
這個呢把它變成另外一個三角形
那麼也就是說呢我現在的這個這個呢
這是所謂的 filter 就是我只取這一段的 frequency
但是呢我這個是乘它這個是乘它這個是乘它因此呢在三角形的中間的地方我 weight 最大
兩邊我就 weight 比較小為什麼兩邊 weight 比較小呢因為這邊會有另外一組會聽到它嘛
那麼因此在中間這些 frequency 呢兩邊都聽到
它應該是兩邊聽到的比較弱好像比較合理
其實這一點並沒有真正的科學根據只是他們是很 ARBITRARY 這樣畫一個三角形
那麼因此呢我等於說是在這個 frequency 這一堆 frequency 裡面我讓中間 weight 最大
距離中間越來越遠的話呢 weight 越來越小所於他們這邊分別乘上這邊 weight 加起來才是那個 signal
那這樣之後我這個才是一個 signal 送出去拿去計算
同樣這是另外一個 signal 拿去計算
那用這個方式的話呢表示說我在兩邊的 frequency 被 weight 比較小
我離越靠近邊緣 weight 越小
那這樣的話呢我這兩個三角形這樣加起來好像比較合理嗯
表示說這樣中間雖然被聽被聽兩次了
可是呢左邊也聽的比較小聲一點右邊也聽的比較小聲一點用用這樣來看
那如果是這樣的話呢我們就得到一系列的
這每一個就是所謂的 filter
就是我只取一個
我只取一個這個
這一這一堆 frequency 裡面的訊號一個 filter 的意思
因次我就得到這樣的一個一個的三角形的 filter
那這樣子呢就是所謂的三角形的 filter  bank
那這個就是我們這邊講的 triangular  shape  in  frequency 然後互相 overlapped 意思嗯
ok 我的每一個 filter 是三角形的然後讓它互相 overlap
其實這個三角形是沒有什麼太大道理喔我們後來知道其實它不見得應該是這樣
不過呢這是一個簡單的做法那就是非常 engineering 的想法就把它變成這樣子
然後呢它是 uniformly  spaced  below 一個 kilo  H  Z
在這個一個 kilo  H  Z 之下
這個也是根據人的聽覺來的
一個一個 kilo  H  Z 這些低頻是我們最多的聲音的特徵在這裡
所以呢我們要把它做的最細密嗯所以呢是 uniformly  DISTRIBUTION 在這個地方
可是呢到了一個 kilo  H  Z 以上的話我就不再是 uniform 而是以 log 的 scale
所謂的 log  scale 是說
畫大一點就會變成這樣
我在一個 kilo  H  Z 以下是一個 uniform 的
1 kilo H Z
在這上面的話我會變成 log 的越來越大越來越大嗯
我會我會以 log 的 scale 它越變越大越變越大到了高頻的時候我的
那事實上這個也是跟這個聽覺神經有關的
也就是說你越到高頻的時候你那一組聽覺神經是聽的越多 frequency 一起聽的
嗯那麼那麼因此呢我們就會變成一個 log  scale 的關係在高頻就變成 log  scale
那這一點其實你也可以解讀成為另外一個現象就是我們人的聽覺
本來聽 frequency 的高低就是聽它的 log 的
那一個最直接的
事實就是你如果學音樂你就知道
do  re  mi  FA  so  la  si
這是 do 這是 re
mi 這中間距離是完全一樣的
你可以知道這個是這是 do 這是 re 這是換一個調而已這是一樣的
那 mi 跟 FAR 是半音中間是這距離是它的一半
然後呢 so  la  si 跟下一個 do
這兩個是半音就是 mi 跟 F  A 之間跟 si 跟 do 之間是半音它的距離是其他的一半其他距離是相同的
那麼到這裡的時候
那這個是什麼 scale 這個就是 log 的 frequency
你如果是以你如果是以 它的 frequency 的 log 來看的話他們剛好就是這個等距的關係
那麼我們耳朵聽起來它就是一個這樣的關係
那其實這就是在 log  scale 上面嗯
所以其實我們的聽覺對於 frequency 感覺本來就是在我們所講的那個
喔 cosine 的那個 frequency 取了 log 之後就是我們聽到的
那你知道從這裡到這裡是變成多提高一倍嘛
這個到這邊提高一倍
然後再高八度就是提高一倍嘛差八度就是差一半的意思嘛
嗯那這個本來就是一個這樣子的這個
所以呢我們人的聽覺本來就是一個 log
那麼因此呢在高頻的時候你用 log 的 frequency 來做這樣的三角形是非常合理的
那在低頻的時候是因為我們的聲音非常大部分的區別在這裡
喔最主要的這個特徵都在這裡所以這地方我們做比較細膩一點是做 uniform 的
這個是這樣我們就得到一組這個所謂的 filter  bank
filter  bank 就是一系列的 filter
所謂的 Mel  scale 的意思 Mel  scale 的意思就是
這個詳細有定義不過我們簡單的講就是在高頻都是以 log 方式增加上去
低頻是 uniform 的
好這個就是我們做的這個 log  scale 的呃 mel  SCALE 的這個 filter  bank
再下來呢我們就每一個裡面得到一個就好像
這個聽覺神經得到一組訊號送到大腦去一樣我們就得到一組訊號
這個呢我們把它取絕對值取 energy 取 log 平方嗯
這個沒什麼特別
都有原因的我們後面會再講我們大概是這樣子你大概了解就是等於是我取的一個個的訊號然後拿來去做後面的分析
至於後面為什麼做這個 inverse  discrete  fourier  transform
這比較複雜我們留到後面再說在七點零我們會詳細的說
那這個東西我們也詳細的後面後面再說
那這樣所得到的東西呢呃我們取一個名字叫做 mel  Frequency  Cepstral  Coefficient
那這個名字怎麼來的我們後面也在後面再說好了嗯
那基本上我們取它叫做 M  F  C  C 這是我們後面所習慣的名字
那麼呃詳細的有一堆理由有一堆我們在七點零會詳細的說這個 Front  end  Signal  Front  end 我們會講這些東西
那基本上這樣做之後我們得到的是十三個參數叫做 M  F  C  C
這樣是十三個
欸那我們剛才說有三十九維呀怎麼只有有三十九怎麼只有十三個還有二十六個就是所謂的 first 跟 second  order 的 difference
也就是他們的微分
那麼換句話說呢
我如果照剛才那樣子做的話
我這樣子得到一個
我現在是十三維
十三個這樣子得到一個也是十三個
這樣子得到一個也是十三個
之後呢我再來呢就是做他們的 first  difference
這個 first  difference 最簡單的做法是兩兩相減
雖然你可以做更複雜更複雜我們也是後面會講
它減它得到它它減它得到它對不對它減它得到它它減它得到它等等我就可以得到底下的十三維
就是所謂的 first  difference  ok
它減它得到它它減它得到它它減它得到它它減它得到它等等的話呢其實這十三個
那底下的十三個等於是它的微分的意思
那同理我還可以它減它得到它我還可以再底下第兩次微分
它減它得到它它減它得到它那麼它減它得到它它減它得到它等等我又可以底下
這樣子因此我就有原始的我用剛才的方法得到的是原始的 M  F  C  C
就是 Mel  Frequency  Cepstral  Coefficients 這個名字我們後面都會解釋我們現在姑且就偷懶一點就大概了解是這麼回事兒就好我們不要花太多時間來說它我們在七點零的時候會仔細的講嗯
那麼這邊所得到 M  F  C  C 是十三個在這裡
然後我就有十三個是它的一次微分 first  difference
然後再有十三個它的兩次微分就是 first  difference 的 first  difference 就是 second  difference
那就是這邊講的 first 跟 second  order 的 difference
你可以想像他們就像是微分一樣的意思
那事實上呢還可以做的更精細我們在七點零會說呢
你不一定是要它減它你還可以做更精細的做法不過我想這些都留到後面嗯我們後面再講
同樣呢在這邊還有講到譬如說 Pitch
這些音高呀什麼這些東西我們留到後面再說
那總之我們到這裡的我們大概可以看到
基本上這些是這樣出來的
那詳細情形後面再說那這段就是我們講的 Feature  Extraction
那有了 Feature  Extraction 之後呢我們再來就可以進入後面的這個 Language  Model
那麼我們在這裡休息十分鐘
