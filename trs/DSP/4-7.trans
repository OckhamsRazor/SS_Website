那我們有一個更有效的方法
那就是我們底下要講的這一個
所謂的這個在那本課本裡面在十多年前的課本裡面它叫做 forward  procedure 
它是靠 define 一個叫做 forward  variable  Alpha  t 的 i 來解
那這個就完全用 iteration 的方式
就很方便就可以把它答案找出來
那在今天的話通常呢我們有一個名字它就叫做 forward  algorithm 
所以一般我們講的所謂的這個東西我們就說它是所謂的 forward  algorithm 
那麼我就用它來解就可以了
那借助一堆 iteration 就馬上就可以算出來
這個計算量大為簡單
 ok 我們這個留到下一堂課
我們在這裡休息十分鐘
 ok
 ok 我們接下去
接下來講這個 forward  problem
這個 forward  algorithm 那麼
講這個東西的時候從這裡開始我都用這麼一張圖所以我們來先來畫一張圖
我這裡的三個 basic  problem 都用這個圖來解釋
這個圖的橫軸是時間 t
所以呢
有 t 時間 t 等於一等於二等於三
到時間等於 t 到最後到大 t
這個是我的最後的
這個大 t 是我的最後的時間
因此 t 等於一的時候呢相當於我有一個
 o  one 在這裡
 t 等於小 t 的時候我相當於有一個 o  t 在這裡
等等這是我的橫軸
我的縱軸呢是 state  number
橫軸是 time  index
縱軸呢是 state  number
譬如說呢這是 state 一 state 二 state 三
一直到 state  n 喔這樣子
那麼舉例來講呢這個其實等於是說我把那個 hidden  markov 排到這邊來
這是第一個 state 這是第二個 state 第三個 state
一直到最後第 n 個 state 在這裡
那麼它會這樣跳過去他也可以跳回他自己他可以跳到下一個
等等喔那這是我的這個
縱軸是 state 是就那個 model 橫軸是我的時間
因此我會怎樣呢舉例來講
我的第一個如果是相當於第一個 state 的話呢等於是這一點
那麼下一瞬間在二的時候呢
我會有一個 o  two 了 o  two 呢可能還是回到原來的那我就表示這樣子
他二的時候仍然在一的地方
但是呢我也可能跳到下一個於是呢我就到這裡
這我只有兩種可能它可以到這裡也可以到這裡
他其實也可以變成三如果那樣的話呢我這邊還有一個他也可以跳到這裡來
等等那然後呢如果二的時候還是在
時間二的時候還在 state 一的話那三的話呢仍然可能還在一
因為我還是有個機率回到原來的嘛這還是可能是一
但是呢我也可能由這裡呢到三的時候會跳到二那就是跳到這裡
我也可能三的時候呢跳到三就到這裡
同理呢我在二的時候如果是二的話
剛才二就跳到這裡來的話呢二還是可以回到二
可以在這裡也可以跳到三也可以跳到四
等等那三呢如果一是二跳到三的話我也可以到這裡來也可以過來等等
那麼以此類推我就可以在這上面畫出這張圖出來就是我的所有的可能
那麼因此呢我的每一瞬間他是在
可以在哪一個 state 上然後我可以怎麼跳怎麼都在這邊畫出來
那然後我每一個我我要找的某一個 state  sequence 其實就是某一條 path
上面的某一條 path 走走走走到哪裡
那那一條 path 就是我的 state  sequence
那我們在之前說我有那麼多個 state  sequence 那其實所有的 state  sequence 都在這裡
我們剛才說我的 state  sequence 那麼多那麼多那麼多我每個都要算
那其實呢我可以不用算那麼複雜因為他們我都在這張圖上
 ok 好有了這個之後我們現在來看我們怎麼 define 這個
喔
做這個 forward  algorithm
那麼我們先 define 叫做這個
 forward  variable 就 alpha  t 的 i
這個定義是什麼呢
就是我從頭看看過來看到 t 為止
看到 t 為止其中呢在 t 的時候是在 state  i
至於前面是在哪裡呢我無所謂的
我沒有規定但是我就規定在 t 的時候要在在 i 上舉例來講譬如說這個是 state  i
那麼在 t 的時候要在 i 上
我只有規定在 t 的時候要在 i 上
我從頭看到 t 為止
那麼從一到 t 減一呢我沒有規定他要在哪裡
所以呢我可以隨便來設一個都行我們舉例來講
我們舉例來說我的
我可以看成是這樣
這個意思是說呢我從頭看到
從 t  o  one 一直到 o  t 我看到 o  t 為止
其中在 t 的時候呢規定一定要在 i 上面
除了 t 之外前面的到 t 減一為止沒有規定所以我在這整塊裡面
不管怎麼走都沒有關係
怎麼走都可以我只是都可以但是只有只有這一點一定要在這裡
那這個機率呢叫做 alpha  t 的 i
 ok 所以你看到呢 given 這個 model 之下呢
我要看到的就是這一堆一到 t 其中 t 的時候是 i 其它的沒有規定
這個叫做 alpha  t 的 i 那然後呢你看到他是兩個參數就是一個 t 一個 i 嘛
所以 alpha  t 的 i 他有兩個參數其實就是這個圖的橫軸跟縱軸 t 就是這個橫軸
 i 就是 state  number 就是這個縱軸所以呢這個意思是說這個 alpha  t 的 i 其實是 define  for
這上面的每一點這上面的每一點都可以有一個 alpha  t 的 i
因此你也可以想像成這個 alpha  t 的 i 呢
這個所謂的這個 forward  variable 這個東西呢
是一個數字可以放到這裡的每一點上去
每一點我都可以填上一個這個東西
那這整個就是一張表因此這整個 algorithm 在幹麻他就是在填這一張表
他的填法就是一行一行的填
我的前面 initialization 這個 initialization 就是
是如何填第一行第一行填完之後呢我就有了第一行就可以算下一行
就有了每一行就可以算下一行就是這邊講的這件事情其實就是一個 iteration
當我有了這一行我就填下一行
那麼這樣於是可以一路填過來等到這一行填完的時候
我的答案就出來了
那就是最後這就是所謂的 forward  algorithm
那為什麼叫 forward  algorithm 你也可以想的出來因為它就一行一行向前走
每一次就是多看一行每一次多看一行這樣子走
走到最後答案就出來了所以他叫做 forward  algorithm
那這些 alpha 叫做 forward  variable
好那我們現在看我如何填第一行
第一行其實很容易
因為第一行的話根本沒有前面的東西嘛
你看我的定義是如果是 alpha  t 的話呢是指
 t 一定要在 i 上面
至於 t 減一之前呢沒有規定嘛
可是如果是 t 等於一的話我現在如何填第一行
填第一行是 t 等於一當 t 等於一的時候
我其實根本沒有前面的東西
這個前面前面這些根本沒有嘛所以呢根本就是把它的這個會在這些點上面的機率算出來而已
那很簡單就是把 o  one 放在第一個 state 的機率是多少
把 o  one 放在第二個 state 的機率是多少乘上 initially 一開始他有個機率
就是 pi  one  pi  two 那麼因此就是這個對不對
就是 t 時間等於一的時候根本沒有比 t 減一之前這些問題都沒有這一這一點就在這裡嘛
這一點就在這裡嘛所以根本沒有這個前面的問題所以我只要看這個會在那個的機率是多少
所以呢就是要從這個 initial  probability 就是就是第一個要會在 state  i 的機率
就是 pi  i 然後呢我現在把第一個機率放進去
第一我再把第一個 vector 放在第 i 個 state
就是 b  i 的 o  one 那這樣子的話呢那我現在把 i 從一算到 n
我全部算出來那第一行就排出來了嘛
所以呢這是第一行其實很容易算這就 initialization
那這個 iteration 的核心就是第二這是第二個就是你如何有了前面一行如何算下一行
那這個其實也很容易你可以想像
根據這邊的式子是說如果我有了如果我有了第 i 行哦
如果我有了第 t 行要如何算 t 加一行
如果有了第 t 行我現在要算第 t 加一行怎麼算
我現在要算 t 加一行如果是在 j
我們舉例來講如果這個是 j 的話
我要算這一個
那這個是什麼呢
這個是跟剛才一樣
是我要是這個這樣的
對不對
也就是說呢我要把整個向前推一步
我現在是 t 加一要在 j 上面到 t 為止呢沒有規定通通都可以
那麼於是呢於是呢到 t 為止當然囉我可以從這個 i 過來
但是我也可以從另外的其他的東西過來
都可以那於是呢我們舉例來講
如果是在如果在 t 的時候是 i 的話那就是我們剛才的 alpha  t 的 i
就是這個東西然後我現在要從 i 跳到 j
所以要乘上一個 a  i  j 對不對這個 alpha  t 的 i 就是我們前面前一行已經算好的
如果前一行是 t 的時候是在 i
前面都有了前面都都算了在 t 的時候是 i 的這個
然後乘上這個 a  i  j 就是這個跳到這邊的機率
那就是這個東西但是現在這個 i 呢是每一個都可以阿
因為我也可能是從這個過來的
從這個過來的話應該有另外一個 alpha  t 的 i 也可以用的等等
舉例來說
我也可以是這一個那他有一個是這個跟這個也可以阿對不對
那那那表示說我在 t 的時間也許是在這個上面
那之前的所有的從這邊跳過來跳到這裡的那這個也可以有個 a  i  j 也可以到那兒去阿
等等那我可能還有另外一個是在這裡阿
 t 的時候可能是在這裡阿我也有另外一個在這裡呀那他也是前面的都算了
只有這個在這裡了那他也可以跳過去阿
那我如果把所有這個全部都加起來的話不表示把這一行也都所有都都算進去了嘛
那於是就得到下一個嘛
對不對那麼因此呢我就是把這邊的 alpha  t 的 i 的這個東西乘上 a  i  j
就在這裡乘上這個 a  i  j
那也可以是這個 i 乘上這個 a  i  j 也可以這個 alpha  t 的 i 乘上這個 a  i  j 那如果全部通通加起來的話
其實就是我把 t 的這一行也讓他每一點都可以了
那個加起來不就是我要的這個嗎對不對
所以呢我就加起來就是這個但是呢你加完之後還要記得這件事
我現在要把 t 加一的 vector
這是 t 加一的這個 vector 也放進
把這個 vector 要放進那個 j 裡面去得到這個機率
所以我最後乘上一個這個那這樣我就變成 t 加一的 j
那這就是說明我怎麼算下一行我只要這一行的通通都有了
我下一行的一個都可以那樣算那每一個都可以這樣算
那麼我這邊只要 j 等於一到 n 的話我的所有的都可以算出來
雖然我只要這一行算完之後下一行我就都可以照算
然後以此類推的話呢我就每一行每一行都可以算
所以 t 呢一直算到 t 減一於是我就把大 t 都算出來
因此呢我變成是
那麼從 initialization 到這個 iteration 我等於是在填這個表
一路填過來等到這邊都填完的時候這邊都有了
都填完了那麼這個時候呢這些就什麼呢就是
 alpha  t 的 i
這個小 t 已經變成大 t 了這是最後這一行
當我最後這一行算出來的時候呢我的答案很簡單我的我要的那個機率就是
所有的最後那一行加起來一加 i
這邊全部加起來就對了是不是這樣
因為就這個 case 而言他是講我的最後一個 state 在這裡
前面的所有的機率我都算進去了
等等我都已經算進去了
那是最後停在這裡的那我把這邊這個的話就這邊停在這裡全部算進去了
這個最後停在這裡全部算進去了那這樣一完全部加起來的話我是把全部所有的 path 都算完了
所以呢這麼一來的話呢我所有 path 全部算完他機率都算進去了
那麼因此就是我要的這個值 ok 那麼因此呢
我現在只要把這個 iteration 這樣一走的話
我的計算量大為減少只是填這張表
這張表不過是 t 乘以 n 而已 t 乘以 n
那麼那麼我算完就完了
那麼它的這個這就所謂的 forward  algorithm 講起來是蠻容易的
這是我們三個 problem 裡面最容易的一個 problem 那麼那麼他為什麼可以把那麼複雜的
本來是 n 的 t 次方變成 t 乘以 n 那主要就是說他所有的 state  sequence 呢
就底下這句話講的意思你雖然他的好像有那麼多 state  sequence 其實他們永遠在這張表上面而已
這張表已經把所有的那麼多都都算進去了
不管他前面怎麼走他每一個時間永遠只有 n 個點
他在每一瞬間永遠只有 n 種 state 因此我就是
把前面的 n 個算出來之後就得到下一個 n
那就是就像填表一樣我這一行填完填下一行我每一次算出這 n 個出來
這樣一路下去答案就都出來了
那就底下這句話講的不管你前面用多少個 state
怎怎麼走喔你但是你最後的話最後的話都是 merge 到這 n 個 state
所以呢你只要填每一個每一個時間只要填這 n 個數字就可以了
那這就是所謂的 forward  algorithm 這也就是我們第一個 problem 的 solution
這是最容易的一個 problem