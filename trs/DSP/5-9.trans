我現在不再講那些東西而是說我們現在真的要要要 train 這個 TRI PHONE 
我們真正回到我們原原來問題是要 train 這個 TRI PHONE 
TRI PHONE 為什麼會有 會會難 train 呢
你記得我們一開始說過 
TRI PHONE 的問題是在它的數目太大了
那麼我就算只有三只有六十個 phone 的話 
TRI PHONE 就是二十一萬六千個
而且很多是看不到的
是很多很多 TRI PHONE 裡面 data 跟本就沒有 嗯
就是所謂的 unseen  TRI  PHONE 
就是你的 data 裡面沒有的
並不是任何一個 phone 
並不是任何一個 phone 
這個左邊接一個什麼右邊接一個什麼你在 data 裡面都可以找得到
可能 data 裡面都找不到
那麼因此呢這就很大的麻煩哦
那以我們國語為例
我們國語的其實很多 phone 不會連起來
所以真正會真正有的 TRI PHONE 大概四千六百個左右
比這個少很多啦哦
我們真正大概四千六百個左右
但是你如果拿一個二十小時 database 來數一數裡面的 TRI PHONE 
大概只有兩千個左右
根本一半都不到
有一大半根本就沒有 嗯
所以那就是這這是真正的問題
就是一大堆 unseen  TRI PHONE 就是你沒有的 TRI PHONE 怎麼辦
那這個辦法就是我們剛才講了半天的這些東西的辦法
那怎麼做呢
那麼我們先看它它它基本上就是什麼呢我我每一個 bass  phone 
包括所有的 possible  context  dependency 的每一個 state 去做一棵 tree 
譬如說我如果總共有五十個 phone 的話
每一個 phone 是五個 state 的話
我總共就是兩百五十個 tree 
什麼意思
譬如說 啊 這是一個 phone 
那麼這個 phone 的話呢它其實左邊可以接很多東西啊很多很多
右邊可以接很多東西啊很多很多
對不對那那光是這個就有很多很多個 TRI PHONE 
那這樣子那裡面有有的 TRI PHONE 我就就是沒有我我我無法 train 
那怎麼辦呢那我現在不要那麼多了
我現在就就只把把所有的啊拿出來
不管左邊什麼右邊什麼我通通都放在一起得到一個啊的
那麼假設這個啊我要五個 state 的話
五個 state 的啊的話我假設說裡面的我要 train 它最後這個 state 怎麼 train 
我就把所有的啊的最可以做為最後一個 state 的所有的 data 拿來
在這裡做一棵 tree 
在這邊長這個 tree 等等等等哦這是這個意思
那我現在就是這個啊
不管他是我現在不管它左邊是什麼右邊是什麼
我左右的 context 都不管我只管它中間這一個
然後呢如果光是光是管中間這個的話我要五個五個 state 構成一個 HMM 的話
我就做五個 state 
然後呢每一個 state 我就做一棵 tree 
那到時候每一個 tree 後面會產生某一些個 TRI PHONE 的這個 state 長怎樣
哦我們底下看到的是這樣
所以呢這這這這是第一句話講的意思
就是說呢我我所謂的 bass  form 所謂的 bass  form 就是包括所有的 context  dependency 
不管左邊接什麼右邊接什麼我都不管了
我就只管這個 bass  form 
這個 bass  form 裡面假設是要一個 HMM 的話
那麼它的每一個 state 我去做一棵 tree 
我就 con  construct 一棵 tree  for 每一個 state  of 每一個 bass  form 
因此呢假設我像我啊總共有五十個這樣子的 form 的話
我就做了就有五十個 HMM 
每一個如果要五個 state 的話
我就做了兩百五十棵 tree  
OK 好那這兩百五十棵 tree 怎麼來呢
我們就舉例來講假設是這個啊的這個音的最後一個 state 
這個 tree 的話我就是把所有的阿 所有的啊的聲音要拿來 train最後一個 state 的所有的 data 都放在一起
那這個時候呢這些 data 放在第一個 node 這裡然後我要開始長這個 tree 
這個時候因為這裡面它可能是所有的這些跟所有的這些都有影響嘛
因此呢它這裡面的這個時候它的 distribution 是非常複雜的
現在不再是我們剛才那邊畫的那麼單純
只有一個 dimension 說有 m 個不是那樣子
現在是三十九維
所以是非常複雜的一堆
尤其現在是因為各種狀況它可以接它可以接各種各樣
以這個為例我們如果放它說它是最後一個 state 的話
最後一個 state 顯然是比較受到後面的影響
後面有各種各樣的的 phone 都在這裡
所以它就會各種各樣
所以呢雖然說是這三十九維這裡面是非常複雜的 distribution 一一團亂
那我希望能夠把它變成一個 tree 之後
到最後能夠不要那麼亂
當然我不可能做到說像這邊純度那麼高那麼純
大概是做不到
但是我至少要能夠做到就是比較清楚一點譬如說呢
這個是這樣子的
那這個呢是另外一個樣子的
這個是這樣子的
它們各自不像這邊這麼一團亂
而至少呢都有一定的純度
而可能譬如說某些個 TRI PHONE 就用這個
某些個 TRI PHONE 就用這個這樣子 
OK 我的目的是這樣子
也就是說因為不可能每一個 TRI PHONE 都會有夠多的 data 去 train 
所以顯然是是有幾個要共用這一個
那它們的 data 都拿來 train 成這一個
那另外有幾個要 train 成這個
它們 data 要拿來變成這個
那問題是到底哪些個可以該兜在這裡共用 data 共用共同 train 一個
哪些個該在這裡共用這個呢
那我就看誰跟誰比較像
這麼複雜三十九維的我怎麼知道誰跟誰比較像呢
就用這個辦法
就去看這個 entropy 由這邊慢慢變到這邊來怎麼樣子 entropy 降到最低
就可以假設這裡面是最純的
這個時候如果有三個 TRI PHONE 共用這個的話
那至少這三個 TRI PHONE 是蠻像所以它們兜在一起純度還是蠻高的
有兩個 TRI PHONE 共用這個的話
它們它們兜在一起純度還是蠻高的
表示它們應該是像的 
OK 所以我的目的是這樣所以我要把這個三十九維的東西這樣這樣子把它把它這個這樣做下來
那我每一次到底用什麼 criterion 
那麼我們剛才在這裡的時候是用一堆 criterion 來判斷
然後來判斷哪些人的身高怎樣
