另外一個呢就是口語對話
這是一個非常 typical 的口語對話的一個一個這個圖
那麼所謂的口語對話呢
這個呃我們舉一個簡單的例子譬如說呢假設某一個人今天出門他去開會
開完會回來的路上他坐在捷運裡面他就拿他的手機來跟他的辦公室裡面的 p  c 來對話
那麼假設他的辦公室 p  c 裡面有一個軟體
這個軟體呢我們稱之為 dialogue  made  server
他就是在跟它的 user 在做對話的在他的辦公室的軟體裡面
這個目的是什麼呢是讀 email
那麼因此呢這是他的 email 的信箱那麼他從 internet 收 email 進來
於是呢他就可以打一個電話給他的 p  c 給他的辦公室的 p  c 說我現在要讀我的 email
那麼於是呢這個這個 dialogue  manager 呢就了解說他要讀他的 email 之後呢它的第一個問題是你告訴我你的 password
那麼因此呢這個 user 就要透過電話用聲音告訴它說我的我的 password 是什麼
那這個 dialogue  manager 要要判斷說到底你是不是該開這個信箱的人
那這時候 password 應該包括兩個部分第一個是你要知道正確的 password
那第二個是你要從你講的聲你講的 password 裡面的聲音的特徵來判斷你是不是那個人
那如果是的話那它就會說 ok 好那麼我現在把信箱打開了
於是呢這個 user 就說你告訴告訴我今天新進來的 email 有幾封
它就說有八十五封
那他就說欸有沒有某某人寄來的
它就再從那裡面查一查它說有那個人寄來了兩封
那你這個再問它說那麼你把這兩封 email 的寄的時間跟 subject 念給我聽
於是它就把這兩封的時間跟 subject 念念出來
於是你說喔我要聽第二封
你把第二封念給我聽它就把第二封念給你聽阿等等
那這個 process 呢就是一個 user 跟這個遠方的一個 p  c 做對話來讀 email 的過程
這樣東西其實今天早就有啦阿那麼只是它就得好不好的問題而已
那麼這樣的一個程序裡面那你就會發現其實跟你今天坐在你的 pc 前面開你的信箱讀 email 是完全一樣的
只是我們剛才所說的我的這個 text  based 的工作換成這個 voice  based 阿是用聲音來做而已
那麼這裡面那麼阿其實這也是 client  server 的一個一個例子
我們知道呢這個是 client 那麼這端是 server 我們是 client 跟 server 中間透過網路在進行
那這裡面有那些事情呢當然你 user 說的話它要能夠辨識而且還要了解阿
所謂的了解的意思是說他說我要看我的 email
你不是去辨認出來說看我的 email 這幾個字
辨認這幾個字沒有什麼用
那真正需要的是他知道了解你是要看信箱
所以它知道你要打開信箱
那打開信箱的先決條件就是要知道你的 password 等等
所以呢除了 recognition 還要 understanding
然後呢當它知道要做什麼事它要用語音來告訴你因為它它跟你唯一的來往是聲音所以呢它要要知道該說什麼話然後用語音合成講講給你聽
那麼除此之外呢要做這個對話的工作呢有一個最重要的核心就是所所謂 dialogue  manager
它在 handle 這個 user 跟它的對話
進來什麼聽到什麼該繼續說什麼到什麼時候該做什麼動作什麼時候該把信箱打開什麼時候該讀那一封信等等這個是它的工作所以它是在這個等於是主導整個的對話的流程
那這個 discourse 什麼呢這個是隨時記錄一路對話下來所記錄下來的知識
譬如說當你說到 ok 現在把第二封念給我聽
什麼第二封當然是指剛才打開的信箱裡面的某某人所寄的那個的第二封
那也就是一路講話的過程你一路把他講的話記下來了
那你就知道他講的是那個那個東西我們稱之為 discourse  context 阿這個是你知道這是環境的意思這是說話的時候的前後文的意思阿
好這個是我們講這個對話的這個基本的
那麼這樣的話我們大概描述了剛才這個圖裡面的對話的這一塊跟搜尋的這一塊
那麼有了這些之後呢我們 more  or  less 就可以辦到我們剛才的這個情形
